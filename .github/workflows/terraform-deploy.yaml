# This is a basic workflow to help you get started with Actions

name: Terraform Deployment Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main","dev","staging" ]
  pull_request:
    branches: [ "dev" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
env: 
 ENVIRONMENT_STAGE: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}
    # default settings to apply for all the steps
    defaults:
      run:
        working-directory: ./roots/main-eks-root/
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ vars.IAM_ROLE }} #arn:aws:iam::861952334844:role/gitHubActionsIAMroleDevTerraform
          role-session-name: githubactionssession
          aws-region: "us-east-1"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test command
        run: |
          echo ${{ vars.IAM_ROLE }}
          
      # Run Terraform commands
      - name: Initialize
        run: terraform init -backend-config="bucket=${{ vars.STATE_BUCKET }}"

      # - name: Formate
      #   run: terraform fmt

      - name: Plan Infrastructure
        run: terraform plan -var-file="homework-project-irynakanst.tfvars" -input=false

      - name: Deploy Infrastructure
        run: terraform apply -var-file="homework-project-irynakanst.tfvars" -input=false -auto-approve

      - name: Apply permissions in aws-auth for Kubernetes RBAC
        working-directory: ./kubernetes-resources
        run: |
          aws eks update-kubeconfig --name project-x-dev-new
          kubectl apply -f aws-auth-dev.yaml
          kubectl get nodes
          account_number=$(aws sts get-caller-identity --query "Account" --output text)


      # - name: Destroy Infrastructure
      #   run: terraform destroy -var-file="homework-project-irynakanst.tfvars" -auto-approve    
